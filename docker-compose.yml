version: '3.8'

services:
  # Database
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: root
      POSTGRES_DB: nestjs
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U root -d nestjs"]
      interval: 5s
      timeout: 5s
      retries: 5

  # MailDev for email testing
  maildev:
    image: maildev/maildev
    ports:
      - "1080:1080"   # Web interface
      - "1025:1025"   # SMTP port

  # Main application
  app:
    build: .
    ports:
      - "3000:3000"
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=nestjs
      - DB_SYNCHRONIZE=false
      - DB_LOGGING=true
      - JWT_SECRET=keeping_secrets_can_kill_you
      - JWT_ACCESS_EXPIRES_IN=15m
      - JWT_REFRESH_EXPIRES_IN=7d
      - APP_PORT=3000
      - NODE_ENV=development
      - SMTP_HOST=maildev
      - SMTP_PORT=1025
      - SMTP_SECURE=false
      - SMTP_IGNORE_TLS=true
      - EMAIL_FROM=noreply@example.com
    depends_on:
      db:
        condition: service_healthy
      maildev:
        condition: service_started
    volumes:
      - /app/node_modules
    command: >
      sh -c "
        echo 'Building project...' &&
        npm run build &&
        echo 'Waiting for database to be ready...' &&
        sleep 5 &&
        node run-migrations.js &&
        npm run start:dev
      "

  # Separate service for running migrations only
  migration-runner:
    build: .
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=root
      - DB_PASSWORD=root
      - DB_NAME=nestjs
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - /app/node_modules
    command: >
      sh -c "
        echo 'Building project...' &&
        npm run build &&
        echo 'Running migrations...' &&
        node run-migrations.js
      "

volumes:
  postgres_data: